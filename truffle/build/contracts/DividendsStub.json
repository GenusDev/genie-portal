{
  "contractName": "DividendsStub",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalDividendPoints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "addMethod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "callHistory",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastDividendPoints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "resetMethod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "ReceiveDividends",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "distributeDividend",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "receiveDividends",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526c7e37be2022c0914b268000000060035534801561002157600080fd5b506040516020806111558339810180604052810190808051906020019092919050505080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506110bf806100966000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632113342d1461008857806351542e3a146100b35780635319504a1461011c578063547d80201461017757806379fc4687146103f5578063806985f7146103ff578063f427b13514610456575b600080fd5b34801561009457600080fd5b5061009d6104bf565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b5061011a600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506104c5565b005b34801561012857600080fd5b5061015d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106cd565b604051808215151515815260200191505060405180910390f35b34801561018357600080fd5b506101de600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506107ff565b604051808c81526020018b81526020018a81526020018060200180602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001861515151581526020018515151515815260200184810384528c818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b5084810383528b818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b5084810382528a818151815260200191508051906020019080838360005b838110156103ae578082015181840152602081019050610393565b50505050905090810190601f1680156103db5780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b6103fd610c38565b005b34801561040b57600080fd5b50610440600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca3565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b506104bd600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610cbb565b005b60025481565b6104cd610ecd565b806004836040518082805190602001908083835b60208310151561050657805182526020820191506020810190506020830392506104e1565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190610573929190610f6e565b506080820151816004019080519060200190610590929190610f6e565b5060a08201518160050190805190602001906105ad929190610f6e565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff0219169083151502179055509050505050565b600080600460405180807f646973747269627574654469766964656e640000000000000000000000000000815250601201905090815260200160405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107b157828160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107f5565b828160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001915050919050565b600080600060608060606000806000806000610819610ecd565b60048d6040518082805190602001908083835b602083101515610851578051825260208201915060208101905060208303925061082c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206101606040519081016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109485780601f1061091d57610100808354040283529160200191610948565b820191906000526020600020905b81548152906001019060200180831161092b57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ea5780601f106109bf576101008083540402835291602001916109ea565b820191906000526020600020905b8154815290600101906020018083116109cd57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a8c5780601f10610a6157610100808354040283529160200191610a8c565b820191906000526020600020905b815481529060010190602001808311610a6f57829003601f168201915b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518797508696508595509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b6000600460405180807f726563656976654469766964656e64730000000000000000000000000000000081525060100190509081526020016040518091039020905060018160080160146101000a81548160ff02191690831515021790555034816000018190555050565b60016020528060005260406000206000915090505481565b60006004826040518082805190602001908083835b602083101515610cf55780518252602082019150602081019050602083039250610cd0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816000018190555060008160010181905550600081600201819055506020604051908101604052806000815250816003019080519060200190610d70929190610fee565b506020604051908101604052806000815250816004019080519060200190610d99929190610fee565b506020604051908101604052806000815250816005019080519060200190610dc2929190610fee565b5060008160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160146101000a81548160ff02191690831515021790555060008160080160156101000a81548160ff0219169083151502179055505050565b61016060405190810160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610faf57805160ff1916838001178555610fdd565b82800160010185558215610fdd579182015b82811115610fdc578251825591602001919060010190610fc1565b5b509050610fea919061106e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061102f57805160ff191683800117855561105d565b8280016001018555821561105d579182015b8281111561105c578251825591602001919060010190611041565b5b50905061106a919061106e565b5090565b61109091905b8082111561108c576000816000905550600101611074565b5090565b905600a165627a7a72305820f7d596f3158db54cb23d2fb0d395c4c208a0bd470182e9092d4e7af48cf94a1f0029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632113342d1461008857806351542e3a146100b35780635319504a1461011c578063547d80201461017757806379fc4687146103f5578063806985f7146103ff578063f427b13514610456575b600080fd5b34801561009457600080fd5b5061009d6104bf565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b5061011a600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506104c5565b005b34801561012857600080fd5b5061015d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106cd565b604051808215151515815260200191505060405180910390f35b34801561018357600080fd5b506101de600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506107ff565b604051808c81526020018b81526020018a81526020018060200180602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001861515151581526020018515151515815260200184810384528c818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b5084810383528b818151815260200191508051906020019080838360005b8381101561034857808201518184015260208101905061032d565b50505050905090810190601f1680156103755780820380516001836020036101000a031916815260200191505b5084810382528a818151815260200191508051906020019080838360005b838110156103ae578082015181840152602081019050610393565b50505050905090810190601f1680156103db5780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b6103fd610c38565b005b34801561040b57600080fd5b50610440600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca3565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b506104bd600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610cbb565b005b60025481565b6104cd610ecd565b806004836040518082805190602001908083835b60208310151561050657805182526020820191506020810190506020830392506104e1565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190610573929190610f6e565b506080820151816004019080519060200190610590929190610f6e565b5060a08201518160050190805190602001906105ad929190610f6e565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff0219169083151502179055509050505050565b600080600460405180807f646973747269627574654469766964656e640000000000000000000000000000815250601201905090815260200160405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107b157828160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107f5565b828160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001915050919050565b600080600060608060606000806000806000610819610ecd565b60048d6040518082805190602001908083835b602083101515610851578051825260208201915060208101905060208303925061082c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206101606040519081016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109485780601f1061091d57610100808354040283529160200191610948565b820191906000526020600020905b81548152906001019060200180831161092b57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109ea5780601f106109bf576101008083540402835291602001916109ea565b820191906000526020600020905b8154815290600101906020018083116109cd57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a8c5780601f10610a6157610100808354040283529160200191610a8c565b820191906000526020600020905b815481529060010190602001808311610a6f57829003601f168201915b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518797508696508595509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b6000600460405180807f726563656976654469766964656e64730000000000000000000000000000000081525060100190509081526020016040518091039020905060018160080160146101000a81548160ff02191690831515021790555034816000018190555050565b60016020528060005260406000206000915090505481565b60006004826040518082805190602001908083835b602083101515610cf55780518252602082019150602081019050602083039250610cd0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816000018190555060008160010181905550600081600201819055506020604051908101604052806000815250816003019080519060200190610d70929190610fee565b506020604051908101604052806000815250816004019080519060200190610d99929190610fee565b506020604051908101604052806000815250816005019080519060200190610dc2929190610fee565b5060008160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160146101000a81548160ff02191690831515021790555060008160080160156101000a81548160ff0219169083151502179055505050565b61016060405190810160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610faf57805160ff1916838001178555610fdd565b82800160010185558215610fdd579182015b82811115610fdc578251825591602001919060010190610fc1565b5b509050610fea919061106e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061102f57805160ff191683800117855561105d565b8280016001018555821561105d579182015b8281111561105c578251825591602001919060010190611041565b5b50905061106a919061106e565b5090565b61109091905b8082111561108c576000816000905550600101611074565b5090565b905600a165627a7a72305820f7d596f3158db54cb23d2fb0d395c4c208a0bd470182e9092d4e7af48cf94a1f0029",
  "sourceMap": "178:651:32:-;;;483:5:30;448:40;;263:62:32;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:62:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:6;277::30;269:5;;:14;;;;;;;;;;;;;;;;;;223:65;263:62:32;178:651;;;;;;",
  "deployedSourceMap": "178:651:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;410:34:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;410:34:30;;;;;;;;;;;;;;;;;;;;;;;392:134:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;392:134:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:310:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:310:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:558:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;960:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;960:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;960:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;960:558:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;643:184:32;;;;;;292:53:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:53:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:426:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;530:426:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;410:34:30;;;;:::o;392:134:8:-;456:27;;:::i;:::-;510:11;489:6;496:10;489:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;489:18:8;;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:134;;:::o;329:310:32:-;392:4;404:28;435:6;:28;;;;;;;;;;;;;;;;;;;;;;;;404:59;;509:1;473:38;;:11;:24;;;;;;;;;;;;:38;;;469:149;;;548:7;521:11;:24;;;:34;;;;;;;;;;;;;;;;;;469:149;;;604:7;576:11;:25;;;:35;;;;;;;;;;;;;;;;;;469:149;630:4;623:11;;329:310;;;;:::o;960:558:8:-;1034:7;1047;1060;1073:6;1092;1111;1130:7;1143;1156;1169:4;1179;1196:20;;:::i;:::-;1219:6;1226:10;1219:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1219:18:8;;;;;;;;;;;;;;;;;;;;;1196:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:4;:14;;;1280:4;:15;;;1303:4;:14;;;1325:4;:16;;;1349:4;:17;;;1374:4;:16;;;1398:4;:17;;;1423:4;:18;;;1449:4;:17;;;1474:4;:11;;;1493:4;:14;;;1243:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;960:558;;;;;;;;;;;;;;:::o;643:184:32:-;695:28;726:6;:26;;;;;;;;;;;;;;;;;;;;;;;;695:57;;779:4;758:11;:18;;;:25;;;;;;;;;;;;;;;;;;813:9;789:11;:21;;:33;;;;643:184;:::o;292:53:30:-;;;;;;;;;;;;;;;;;:::o;530:426:8:-;591:21;615:6;622:10;615:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;615:18:8;;;;;;;;;;;;;;;;;;;;;591:42;;657:1;640:4;:14;;:18;;;;682:1;664:4;:15;;:19;;;;706:1;689:4;:14;;:18;;;;713:21;;;;;;;;;;;;;:4;:16;;:21;;;;;;;;;;;;:::i;:::-;;740:22;;;;;;;;;;;;;:4;:17;;:22;;;;;;;;;;;;:::i;:::-;;768:21;;;;;;;;;;;;;:4;:16;;:21;;;;;;;;;;;;:::i;:::-;;823:1;795:4;:17;;;:30;;;;;;;;;;;;;;;;;;860:1;831:4;:18;;;:31;;;;;;;;;;;;;;;;;;896:1;868:4;:17;;;:30;;;;;;;;;;;;;;;;;;918:5;904:4;:11;;;:19;;;;;;;;;;;;;;;;;;946:5;929:4;:14;;;:22;;;;;;;;;;;;;;;;;;530:426;;:::o;178:651:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.6.0;\nimport '../utility/SafeMath.sol';\nimport '../token/ActiveToken.sol';\nimport '../crowdsale/GNITokenCrowdsale.sol';\nimport '../ContractStub.sol';\n\ncontract DividendsStub is Dividends, ContractStub {\n  using SafeMath for uint256;\n\n  constructor (ActiveToken token_) public\n  Dividends(token_) {}\n\n  function distributeDividend(address account) external returns (bool) {\n    CallData storage methodState = method['distributeDividend'];\n    if (methodState.firstAddress == address(0)) {\n      methodState.firstAddress = account;\n    } else {\n      methodState.secondAddress = account;\n    }\n    return true;\n  }\n\n  function receiveDividends () external payable {\n    CallData storage methodState = method['receiveDividends'];\n    methodState.called = true;\n    methodState.firstUint = msg.value;\n  }\n}\n",
  "sourcePath": "/Users/steven/genie-portal/truffle/contracts/dividends/DividendsStub.sol",
  "ast": {
    "absolutePath": "/Users/steven/genie-portal/truffle/contracts/dividends/DividendsStub.sol",
    "exportedSymbols": {
      "DividendsStub": [
        4090
      ]
    },
    "id": 4091,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4009,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:32"
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 4010,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 8808,
        "src": "33:33:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/token/ActiveToken.sol",
        "file": "../token/ActiveToken.sol",
        "id": 4011,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 6563,
        "src": "67:34:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/crowdsale/GNITokenCrowdsale.sol",
        "file": "../crowdsale/GNITokenCrowdsale.sol",
        "id": 4012,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 3615,
        "src": "102:44:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/ContractStub.sol",
        "file": "../ContractStub.sol",
        "id": 4013,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 1021,
        "src": "147:29:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4014,
              "name": "Dividends",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3933,
              "src": "204:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dividends_$3933",
                "typeString": "contract Dividends"
              }
            },
            "id": 4015,
            "nodeType": "InheritanceSpecifier",
            "src": "204:9:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4016,
              "name": "ContractStub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1020,
              "src": "215:12:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractStub_$1020",
                "typeString": "contract ContractStub"
              }
            },
            "id": 4017,
            "nodeType": "InheritanceSpecifier",
            "src": "215:12:32"
          }
        ],
        "contractDependencies": [
          1020,
          3933
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4090,
        "linearizedBaseContracts": [
          4090,
          1020,
          3933
        ],
        "name": "DividendsStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4020,
            "libraryName": {
              "contractScope": null,
              "id": 4018,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8807,
              "src": "238:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8807",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "232:27:32",
            "typeName": {
              "id": 4019,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4028,
              "nodeType": "Block",
              "src": "323:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 4029,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4025,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4022,
                    "src": "315:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6562",
                      "typeString": "contract ActiveToken"
                    }
                  }
                ],
                "id": 4026,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4024,
                  "name": "Dividends",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3933,
                  "src": "305:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Dividends_$3933_$",
                    "typeString": "type(contract Dividends)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "305:17:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4022,
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4029,
                  "src": "276:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ActiveToken_$6562",
                    "typeString": "contract ActiveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4021,
                    "name": "ActiveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6562,
                    "src": "276:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6562",
                      "typeString": "contract ActiveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "275:20:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:32"
            },
            "scope": 4090,
            "src": "263:62:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4065,
              "nodeType": "Block",
              "src": "398:241:32",
              "statements": [
                {
                  "assignments": [
                    4037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4037,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4066,
                      "src": "404:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4036,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "404:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4041,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4038,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "435:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4040,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "646973747269627574654469766964656e64",
                      "id": 4039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "442:20:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7f3a37676555a2c93d4453b1456b81f2d2253a54ac75eda4bd52d6d021b3e9cb",
                        "typeString": "literal_string \"distributeDividend\""
                      },
                      "value": "distributeDividend"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "435:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "404:59:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4042,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4037,
                        "src": "473:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "firstAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "473:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "509:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "501:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "501:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4061,
                    "nodeType": "Block",
                    "src": "568:50:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4055,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4037,
                              "src": "576:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "576:25:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4058,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "604:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "576:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4060,
                        "nodeType": "ExpressionStatement",
                        "src": "576:35:32"
                      }
                    ]
                  },
                  "id": 4062,
                  "nodeType": "IfStatement",
                  "src": "469:149:32",
                  "trueBody": {
                    "id": 4054,
                    "nodeType": "Block",
                    "src": "513:49:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4048,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4037,
                              "src": "521:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4050,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "firstAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "521:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4051,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "548:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "521:34:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4053,
                        "nodeType": "ExpressionStatement",
                        "src": "521:34:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "630:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4035,
                  "id": 4064,
                  "nodeType": "Return",
                  "src": "623:11:32"
                }
              ]
            },
            "documentation": null,
            "id": 4066,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "distributeDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4031,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "357:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:17:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4034,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "392:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:6:32"
            },
            "scope": 4090,
            "src": "329:310:32",
            "stateMutability": "nonpayable",
            "superFunction": 3892,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4088,
              "nodeType": "Block",
              "src": "689:138:32",
              "statements": [
                {
                  "assignments": [
                    4070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4070,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4089,
                      "src": "695:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4069,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "695:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4074,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4071,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "726:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4073,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "726563656976654469766964656e6473",
                      "id": 4072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "733:18:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02774b30b9046dddc93f84d5d98c6879ea329bb3822df4e2c1734b7396145b07",
                        "typeString": "literal_string \"receiveDividends\""
                      },
                      "value": "receiveDividends"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "726:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "695:57:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4075,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "758:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "called",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "758:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "779:4:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "758:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4080,
                  "nodeType": "ExpressionStatement",
                  "src": "758:25:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4081,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "789:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4083,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 837,
                      "src": "789:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4084,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9307,
                        "src": "813:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "813:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "789:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4087,
                  "nodeType": "ExpressionStatement",
                  "src": "789:33:32"
                }
              ]
            },
            "documentation": null,
            "id": 4089,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "receiveDividends",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:2:32"
            },
            "payable": true,
            "returnParameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:32"
            },
            "scope": 4090,
            "src": "643:184:32",
            "stateMutability": "payable",
            "superFunction": 3932,
            "visibility": "external"
          }
        ],
        "scope": 4091,
        "src": "178:651:32"
      }
    ],
    "src": "0:830:32"
  },
  "legacyAST": {
    "absolutePath": "/Users/steven/genie-portal/truffle/contracts/dividends/DividendsStub.sol",
    "exportedSymbols": {
      "DividendsStub": [
        4090
      ]
    },
    "id": 4091,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4009,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:32"
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 4010,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 8808,
        "src": "33:33:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/token/ActiveToken.sol",
        "file": "../token/ActiveToken.sol",
        "id": 4011,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 6563,
        "src": "67:34:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/crowdsale/GNITokenCrowdsale.sol",
        "file": "../crowdsale/GNITokenCrowdsale.sol",
        "id": 4012,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 3615,
        "src": "102:44:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/steven/genie-portal/truffle/contracts/ContractStub.sol",
        "file": "../ContractStub.sol",
        "id": 4013,
        "nodeType": "ImportDirective",
        "scope": 4091,
        "sourceUnit": 1021,
        "src": "147:29:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4014,
              "name": "Dividends",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3933,
              "src": "204:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dividends_$3933",
                "typeString": "contract Dividends"
              }
            },
            "id": 4015,
            "nodeType": "InheritanceSpecifier",
            "src": "204:9:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4016,
              "name": "ContractStub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1020,
              "src": "215:12:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractStub_$1020",
                "typeString": "contract ContractStub"
              }
            },
            "id": 4017,
            "nodeType": "InheritanceSpecifier",
            "src": "215:12:32"
          }
        ],
        "contractDependencies": [
          1020,
          3933
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4090,
        "linearizedBaseContracts": [
          4090,
          1020,
          3933
        ],
        "name": "DividendsStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4020,
            "libraryName": {
              "contractScope": null,
              "id": 4018,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8807,
              "src": "238:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8807",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "232:27:32",
            "typeName": {
              "id": 4019,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4028,
              "nodeType": "Block",
              "src": "323:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 4029,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4025,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4022,
                    "src": "315:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6562",
                      "typeString": "contract ActiveToken"
                    }
                  }
                ],
                "id": 4026,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4024,
                  "name": "Dividends",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3933,
                  "src": "305:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Dividends_$3933_$",
                    "typeString": "type(contract Dividends)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "305:17:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4022,
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4029,
                  "src": "276:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ActiveToken_$6562",
                    "typeString": "contract ActiveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4021,
                    "name": "ActiveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6562,
                    "src": "276:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6562",
                      "typeString": "contract ActiveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "275:20:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:32"
            },
            "scope": 4090,
            "src": "263:62:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4065,
              "nodeType": "Block",
              "src": "398:241:32",
              "statements": [
                {
                  "assignments": [
                    4037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4037,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4066,
                      "src": "404:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4036,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "404:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4041,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4038,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "435:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4040,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "646973747269627574654469766964656e64",
                      "id": 4039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "442:20:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7f3a37676555a2c93d4453b1456b81f2d2253a54ac75eda4bd52d6d021b3e9cb",
                        "typeString": "literal_string \"distributeDividend\""
                      },
                      "value": "distributeDividend"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "435:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "404:59:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4042,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4037,
                        "src": "473:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "firstAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "473:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "509:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "501:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "501:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4061,
                    "nodeType": "Block",
                    "src": "568:50:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4055,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4037,
                              "src": "576:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "576:25:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4058,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "604:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "576:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4060,
                        "nodeType": "ExpressionStatement",
                        "src": "576:35:32"
                      }
                    ]
                  },
                  "id": 4062,
                  "nodeType": "IfStatement",
                  "src": "469:149:32",
                  "trueBody": {
                    "id": 4054,
                    "nodeType": "Block",
                    "src": "513:49:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4048,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4037,
                              "src": "521:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4050,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "firstAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "521:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4051,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4031,
                            "src": "548:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "521:34:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4053,
                        "nodeType": "ExpressionStatement",
                        "src": "521:34:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "630:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4035,
                  "id": 4064,
                  "nodeType": "Return",
                  "src": "623:11:32"
                }
              ]
            },
            "documentation": null,
            "id": 4066,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "distributeDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4031,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "357:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:17:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4034,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "392:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:6:32"
            },
            "scope": 4090,
            "src": "329:310:32",
            "stateMutability": "nonpayable",
            "superFunction": 3892,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4088,
              "nodeType": "Block",
              "src": "689:138:32",
              "statements": [
                {
                  "assignments": [
                    4070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4070,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4089,
                      "src": "695:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4069,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "695:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4074,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4071,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "726:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4073,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "726563656976654469766964656e6473",
                      "id": 4072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "733:18:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02774b30b9046dddc93f84d5d98c6879ea329bb3822df4e2c1734b7396145b07",
                        "typeString": "literal_string \"receiveDividends\""
                      },
                      "value": "receiveDividends"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "726:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "695:57:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4075,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "758:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "called",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "758:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "779:4:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "758:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4080,
                  "nodeType": "ExpressionStatement",
                  "src": "758:25:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4081,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4070,
                        "src": "789:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4083,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 837,
                      "src": "789:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4084,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9307,
                        "src": "813:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "813:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "789:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4087,
                  "nodeType": "ExpressionStatement",
                  "src": "789:33:32"
                }
              ]
            },
            "documentation": null,
            "id": 4089,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "receiveDividends",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:2:32"
            },
            "payable": true,
            "returnParameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:32"
            },
            "scope": 4090,
            "src": "643:184:32",
            "stateMutability": "payable",
            "superFunction": 3932,
            "visibility": "external"
          }
        ],
        "scope": 4091,
        "src": "178:651:32"
      }
    ],
    "src": "0:830:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-03-25T19:29:22.711Z"
}