{
  "contractName": "GNITokenCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "activeToken_",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalValuation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "doomsDay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "developer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "inactiveToken_",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_doomsDay",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_developer",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405160a0806120ca8339810180604052810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050848484848460008311151561006f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156100ab57600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061013b6101db565b604051809103906000f080158015610157573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050504282101515156101aa57600080fd5b8181101515156101b957600080fd5b81600581905550806006819055505050600060078190555050505050506101eb565b604051611817806108b383390190565b6106b9806101fa6000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100af5780631807cd5f146100de578063295b9300146101355780632c4e722e146101605780634042b66f1461018b578063b7a8807c146101b6578063c19b7bc0146101e1578063ca4b208b1461020c578063da45be0a14610263578063ec8ac4d8146102ba575b6100ad336102f0565b005b3480156100bb57600080fd5b506100c46104ee565b604051808215151515815260200191505060405180910390f35b3480156100ea57600080fd5b506100f36104fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014157600080fd5b5061014a610520565b6040518082815260200191505060405180910390f35b34801561016c57600080fd5b50610175610526565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101a061052c565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101cb610532565b6040518082815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610538565b6040518082815260200191505060405180910390f35b34801561021857600080fd5b5061022161053e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026f57600080fd5b50610278610564565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ee600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102f0565b005b6000803491506103008383610589565b610309826105cb565b9050610320826004546105e990919063ffffffff16565b6004819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d602081101561046a57600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a3505050565b60006006544211905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60035481565b60045481565b60055481565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060004292506005549150600654905060055442101580156105af57506006544211155b15156105ba57600080fd5b6105c48585610605565b5050505050565b60006105e26003548361065590919063ffffffff16565b9050919050565b600081830190508281101515156105fc57fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561064157600080fd5b6000811415151561065157600080fd5b5050565b6000808314156106685760009050610687565b818302905081838281151561067957fe5b0414151561068357fe5b8090505b929150505600a165627a7a72305820e5e29d22efbfeacdd5c4149a3a71e9529ae99703326762af8adcfd084d54322e002960806040526000600360146101000a81548160ff02191690831515021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a88061006f6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100eb578063095ea7b31461011a57806318160ddd1461017f57806323b872dd146101aa57806340c10f191461022f57806342966c681461029457806366188463146102c157806370a0823114610326578063715018a61461037d57806379cc6790146103945780637d64bcb4146103e15780638da5cb5b14610410578063a9059cbb14610467578063d73dd623146104cc578063dd62ed3e14610531578063f2fde38b146105a8575b600080fd5b3480156100f757600080fd5b506101006105eb565b604051808215151515815260200191505060405180910390f35b34801561012657600080fd5b50610165600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fe565b604051808215151515815260200191505060405180910390f35b34801561018b57600080fd5b506101946106f0565b6040518082815260200191505060405180910390f35b3480156101b657600080fd5b50610215600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106fa565b604051808215151515815260200191505060405180910390f35b34801561023b57600080fd5b5061027a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061091b565b604051808215151515815260200191505060405180910390f35b3480156102a057600080fd5b506102bf60048036038101908080359060200190929190505050610aa5565b005b3480156102cd57600080fd5b5061030c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ab2565b604051808215151515815260200191505060405180910390f35b34801561033257600080fd5b50610367600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d44565b6040518082815260200191505060405180910390f35b34801561038957600080fd5b50610392610d8c565b005b3480156103a057600080fd5b506103df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e91565b005b3480156103ed57600080fd5b506103f6610e9f565b604051808215151515815260200191505060405180910390f35b34801561041c57600080fd5b50610425610f67565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047357600080fd5b506104b2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f8d565b604051808215151515815260200191505060405180910390f35b3480156104d857600080fd5b50610517600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111ad565b604051808215151515815260200191505060405180910390f35b34801561053d57600080fd5b50610592600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a9565b6040518082815260200191505060405180910390f35b3480156105b457600080fd5b506105e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611430565b005b600360149054906101000a900460ff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561074957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561078557600080fd5b6107d6826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461149890919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610869826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114b190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000600360149054906101000a900460ff1615151561093957600080fd5b61094e826001546114b190919063ffffffff16565b6001819055506109a5826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114b190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b610aaf33826114cd565b50565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083101515610bc4576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c58565b610bd7838261149890919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610de857600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610e9b82826114cd565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610efd57600080fd5b600360149054906101000a900460ff16151515610f1957600080fd5b6001600360146101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610fdc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561101857600080fd5b611069826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461149890919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110fc826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114b190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600061123e82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114b190919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561148c57600080fd5b61149581611680565b50565b60008282111515156114a657fe5b818303905092915050565b600081830190508281101515156114c457fe5b80905092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561151a57600080fd5b61156b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461149890919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115c28160015461149890919063ffffffff16565b6001819055508173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5826040518082815260200191505060405180910390a2600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116bc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820f08a62895b541e4e15300507f0304f8356bb1c162f04b291d56aa08edb3025030029",
  "deployedBytecode": "0x6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100af5780631807cd5f146100de578063295b9300146101355780632c4e722e146101605780634042b66f1461018b578063b7a8807c146101b6578063c19b7bc0146101e1578063ca4b208b1461020c578063da45be0a14610263578063ec8ac4d8146102ba575b6100ad336102f0565b005b3480156100bb57600080fd5b506100c46104ee565b604051808215151515815260200191505060405180910390f35b3480156100ea57600080fd5b506100f36104fa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561014157600080fd5b5061014a610520565b6040518082815260200191505060405180910390f35b34801561016c57600080fd5b50610175610526565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101a061052c565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101cb610532565b6040518082815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610538565b6040518082815260200191505060405180910390f35b34801561021857600080fd5b5061022161053e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026f57600080fd5b50610278610564565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ee600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102f0565b005b6000803491506103008383610589565b610309826105cb565b9050610320826004546105e990919063ffffffff16565b6004819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b505050506040513d602081101561046a57600080fd5b8101908080519060200190929190505050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a3505050565b60006006544211905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60035481565b60045481565b60055481565b60065481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060004292506005549150600654905060055442101580156105af57506006544211155b15156105ba57600080fd5b6105c48585610605565b5050505050565b60006105e26003548361065590919063ffffffff16565b9050919050565b600081830190508281101515156105fc57fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561064157600080fd5b6000811415151561065157600080fd5b5050565b6000808314156106685760009050610687565b818302905081838281151561067957fe5b0414151561068357fe5b8090505b929150505600a165627a7a72305820e5e29d22efbfeacdd5c4149a3a71e9529ae99703326762af8adcfd084d54322e0029",
  "sourceMap": "153:6629:3:-;;;266:297;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:297:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:12;517:9;455:5;462:10;474:6;2053:1:2;2045:5;:9;2037:18;;;;;;;;2091:1;2069:24;;:10;:24;;;;2061:33;;;;;;;;2108:5;2101:4;:12;;;;2131:10;2119:9;;:22;;;;;;;;;;;;;;;;;;2164:6;2147:14;;:23;;;;;;;;;;;;;;;;;;2191:14;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2191:14:2;2176:12;;:29;;;;;;;;;;;;;;;;;;1960:250;;;968:15:4;952:12;:31;;944:40;;;;;;;;1011:12;998:9;:25;;990:34;;;;;;;;1045:12;1031:11;:26;;;;1074:9;1063:8;:20;;;;820:268;;557:1:3;540:14;:18;;;;266:297;;;;;153:6629;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "153:6629:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:21:2;2450:10;2440:9;:21::i;:::-;153:6629:3;1242:150:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1242:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;989:28:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;989:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;232:29:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:29:3;;;;;;;;;;;;;;;;;;;;;;;1326:19:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1326:19:2;;;;;;;;;;;;;;;;;;;;;;;1376:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1376:24:2;;;;;;;;;;;;;;;;;;;;;;;261:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;261:26:4;;;;;;;;;;;;;;;;;;;;;;;291:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;291:23:4;;;;;;;;;;;;;;;;;;;;;;;1022:24:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1022:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;955:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;955:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2601:628;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2664:17;2795:14;2684:9;2664:29;;2699:45;2720:12;2734:9;2699:20;:45::i;:::-;2812:26;2828:9;2812:15;:26::i;:::-;2795:43;;2877:24;2891:9;2877;;:13;;:24;;;;:::i;:::-;2865:9;:36;;;;2917:14;;;;;;;;;;;2908:37;;;2946:9;;;;;;;;;;;2957:12;2971:6;2908:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2908:70:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2908:70:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2908:70:2;;;;;;;;;;;;;;;;;3029:12;2990:88;;3011:10;2990:88;;;3049:9;3066:6;2990:88;;;;;;;;;;;;;;;;;;;;;;;;2601:628;;;:::o;1242:150:4:-;1284:4;1379:8;;1361:15;:26;1354:33;;1242:150;:::o;989:28:2:-;;;;;;;;;;;;;:::o;232:29:3:-;;;;:::o;1326:19:2:-;;;;:::o;1376:24::-;;;;:::o;261:26:4:-;;;;:::o;291:23::-;;;;:::o;1022:24:2:-;;;;;;;;;;;;;:::o;955:30::-;;;;;;;;;;;;;:::o;1574:180:4:-;468:14;506:10;536;485:15;468:32;;519:11;;506:24;;549:8;;536:21;;590:11;;571:15;:30;;:61;;;;;624:8;;605:15;:27;;571:61;563:70;;;;;;;;1697:52;1724:12;1738:10;1697:26;:52::i;:::-;1574:180;;;;;:::o;5918:121:2:-;5990:7;6014:20;6029:4;;6014:10;:14;;:20;;;;:::i;:::-;6007:27;;5918:121;;;:::o;1238:128:21:-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;3877:175:2:-;4014:1;3990:26;;:12;:26;;;;3982:35;;;;;;;;4045:1;4031:10;:15;;4023:24;;;;;;;;3877:175;;:::o;203:380:21:-;263:9;495:1;489:2;:7;485:36;;;513:1;506:8;;;;485:36;536:2;531;:7;527:11;;561:2;555;551:1;:6;;;;;;;;:12;544:20;;;;;;577:1;570:8;;203:380;;;;;:::o",
  "source": "pragma solidity 0.4.24;\nimport './TimedCrowdsale.sol';\nimport '../utility/SafeMath.sol';\nimport '../Project.sol';\nimport '../token/ERC20/GNIToken.sol';\n\ncontract GNITokenCrowdsale is TimedCrowdsale {\n  using SafeMath for uint256;\n  uint256 public totalValuation;\n\n  constructor\n      (\n        uint256 _openingTime,\n        uint256 _doomsDay,\n        uint256 _rate,\n        address _developer,\n        GNIToken _token\n      )\n      public\n      Crowdsale(_rate, _developer, _token)\n      TimedCrowdsale(_openingTime, _doomsDay) {\n          totalValuation = 0;\n  }\n\n  /* event LogVotes (\n    address voter,\n    uint256 projectId,\n    uint256 amount\n    );\n\n\n  address[] public projects;\n\n  function getInfo(uint256 id) public view returns(\n    string, uint256, uint256, uint256, uint256, bool, uint256, uint256\n    ) {\n      address projectAddr = projects[id];\n      return (\n        Project(projectAddr).name(),\n        Project(projectAddr).valuation(),\n        Project(projectAddr).capitalRequired(),\n        Project(projectAddr).developerTokens(),\n        Project(projectAddr).investorTokens(),\n        Project(projectAddr).active(),\n        Project(projectAddr).voteCount(),\n        Project(projectAddr).closingTime()\n        );\n      } */\n\n//after this, the developer has to approve this contract to spend the amount of inactive tokens associated with developers on its behalf\n /* function pitchProject(string _name, address _manager, uint capitalRequired, uint256 _valuation, string _lat, string _lng) public payable {\n   (uint256 developerTokens, uint256 investorTokens) = tokensToIssue(_valuation, capitalRequired);\n\n   GNIToken(inactiveToken_).mint(developer, developerTokens.add(investorTokens));\n   totalValuation = totalValuation.add(_valuation);\n\n     // Increase crowdsale duation by 90 days\n   _extendDoomsDay(90);\n\n    uint256 _id = projects.length;\n    //the following line causes a migration error...\n    address projectAddr = new Project(_id, _name, _manager, address(this), _valuation, capitalRequired, developerTokens, investorTokens, _lat, _lng);\n    projects.push(projectAddr);\n    Project(projectAddr).log();\n }\n\n function tokensToIssue (uint256 valuation, uint256 investorValue) private view returns (uint256, uint256) {\n   uint256 developerValue = valuation.sub(investorValue);\n\n   return (developerValue.mul(rate), investorValue.mul(rate));\n }\n\n //before this, the investor has to approve this contract to spend the amount of tokens they'll be buying on their behalf. this is needed to activate tokens later.\n function buyTokensAndVote (uint256 _projectVotedForId) public payable {\n   //add require statement that makes sure the projet isnt already active\n   buyTokens(msg.sender);\n   updateInvestor(_projectVotedForId);\n   Project(projects[_projectVotedForId]).update(msg.value);\n }\n\n struct Investor {\n   address addr;\n   uint256 id;\n   uint256 voteCredit;\n   //maps from projectId to number of votes for that project\n   mapping(uint256 => uint256) votes;\n } */\n\n /* Investor[] public investors;\n mapping(address => uint256) internal investorIds;\n\n function updateInvestor (uint256 _projectId) private {\n   if (investorIds[msg.sender] == 0) {\n     Investor memory newInvestor;\n\n     newInvestor.addr = msg.sender;\n\n     uint256 id = investors.length;\n     newInvestor.id = id;\n     investorIds[msg.sender] = id;\n\n     investors.push(newInvestor);\n   }\n\n   updateInvestorVotes(_projectId);\n }\n\n function updateInvestorVotes(uint256 _projectId) internal {\n   investors[investorIds[msg.sender]].votes[_projectId] = investors[investorIds[msg.sender]].votes[_projectId].add(msg.value);\n   emit LogVotes(msg.sender, _projectId, msg.value);\n }\n\n function _extendDoomsDay(uint256 _days) internal onlyWhileOpen {\n    doomsDay = doomsDay.add(_days.mul(1728000));\n }\n\n function activateProject() public {\n    (uint256 projectId, bool canActivate) = projectToActivateDetails();\n\n    if(canActivate){\n      Project project = Project(projects[projectId]);\n\n      uint256 developerTokens = project.developerTokens_();\n      GNIToken(inactiveToken_).burnFrom(developer, developerTokens);\n      GNIToken(activeToken_).mint(developer, developerTokens);\n      updateInvestors(project.investorTokens_(), projectId);\n\n      forwardFunds(developer, project.capitalRequired_());\n      project.activate();\n    }\n  } */\n\n  /* function projectToActivateDetails() private returns (uint256, bool) {\n    uint256 leadingProjectId;\n    bool candidateFound = false;\n\n    for(uint256 i = 0; i < projects.length; i = i.add(1)) {\n      if (Project(projects[i]).beats(projects[leadingProjectId])) {\n        leadingProjectId = i;\n        candidateFound = true;\n      }\n    }\n\n    return (leadingProjectId, candidateFound && Project(projects[leadingProjectId]).capitalRequired_() <= weiRaised);\n  }\n\n  function updateInvestors (uint256 tokens, uint256 projectId) private {\n    uint256 supply = GNIToken(inactiveToken_).totalSupply().sub(GNIToken(inactiveToken_).balanceOf(developer));\n    uint256 activationDivisor = supply.div(tokens);\n\n    for (uint256 i = 0; i <= investors.length; i = i.add(1)) {\n      Investor memory investor = investors[i];\n\n      /* uint256 investorBalance = GNIToken(inactiveToken_).balanceOf(investors[i].addr); */\n      /* uint256 tokensToActivate = investorBalance.div(activationDivisor); */\n      /* GNIToken(inactiveToken_).burnFrom(investors[i].addr, tokensToActivate);\n      GNIToken(activeToken_).mint(investors[i].addr, tokensToActivate);\n\n      uint256 voteCredit = investors[i].votes[projectId];\n      investors[i].votes[projectId] = 0;\n      investors[i].voteCredit = investors[i].voteCredit.add(voteCredit); */\n    /* }\n  }  */\n\n  /* function forwardFunds (address _to, uint256 amount) internal {\n    _to.transfer(amount);\n    weiRaised = weiRaised.sub(amount);\n  } */\n\n  //we want this to be called on intervals\n  /* function distributeDividends () external {\n    //store the total amount of wei in a variable\n    //iterate through each investor.\n    //divide the total active tokens by the number of active investor tokens.\n    //divide the total wei by the resulting number to find out how much to wei to transfer\n    uint256 activeTokens = GNIToken(activeToken_).totalSupply();\n    uint256 profits = address(this).balance.sub(weiRaised);\n\n    for (uint256 i = 0; i <= investors.length; i = i.add(1)) {\n      Investor storage investor = investors[i];\n      grantDividend(investor.addr, activeTokens, profits);\n    }\n\n    grantDividend(developer, activeTokens, profits);\n  }\n\n  function grantDividend (address investor, uint256 activeTokens, uint256 profits) private {\n    uint256 investorShare = activeTokens.div(GNIToken(activeToken_).balanceOf(investor));\n    uint256 dividend = profits.div(investorShare);\n    investor.transfer(dividend);\n  } */\n}\n",
  "sourcePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/crowdsale/GNITokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/crowdsale/GNITokenCrowdsale.sol",
    "exportedSymbols": {
      "GNITokenCrowdsale": [
        553
      ]
    },
    "id": 554,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 514,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/crowdsale/TimedCrowdsale.sol",
        "file": "./TimedCrowdsale.sol",
        "id": 515,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 654,
        "src": "24:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 516,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 2100,
        "src": "55:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/Project.sol",
        "file": "../Project.sol",
        "id": 517,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 348,
        "src": "89:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/token/ERC20/GNIToken.sol",
        "file": "../token/ERC20/GNIToken.sol",
        "id": 518,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 1098,
        "src": "114:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 519,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 653,
              "src": "183:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$653",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 520,
            "nodeType": "InheritanceSpecifier",
            "src": "183:14:3"
          }
        ],
        "contractDependencies": [
          512,
          653
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 553,
        "linearizedBaseContracts": [
          553,
          653,
          512
        ],
        "name": "GNITokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 523,
            "libraryName": {
              "contractScope": null,
              "id": 521,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2099,
              "src": "208:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2099",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "202:27:3",
            "typeName": {
              "id": 522,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 525,
            "name": "totalValuation",
            "nodeType": "VariableDeclaration",
            "scope": 553,
            "src": "232:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 524,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 551,
              "nodeType": "Block",
              "src": "528:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 547,
                      "name": "totalValuation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "540:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "557:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "540:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "540:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 552,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 538,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 531,
                    "src": "455:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 539,
                    "name": "_developer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 533,
                    "src": "462:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 540,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 535,
                    "src": "474:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GNIToken_$1097",
                      "typeString": "contract GNIToken"
                    }
                  }
                ],
                "id": 541,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 537,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "445:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$512_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "445:36:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 543,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 527,
                    "src": "503:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 544,
                    "name": "_doomsDay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 529,
                    "src": "517:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 542,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 653,
                  "src": "488:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$653_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "488:39:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "294:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "name": "_doomsDay",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "324:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "351:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "name": "_developer",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "374:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "402:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GNIToken_$1097",
                    "typeString": "contract GNIToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 534,
                    "name": "GNIToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1097,
                    "src": "402:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GNIToken_$1097",
                      "typeString": "contract GNIToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "284:141:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:3"
            },
            "scope": 553,
            "src": "266:297:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 554,
        "src": "153:6629:3"
      }
    ],
    "src": "0:6783:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/crowdsale/GNITokenCrowdsale.sol",
    "exportedSymbols": {
      "GNITokenCrowdsale": [
        553
      ]
    },
    "id": 554,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 514,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/crowdsale/TimedCrowdsale.sol",
        "file": "./TimedCrowdsale.sol",
        "id": 515,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 654,
        "src": "24:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 516,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 2100,
        "src": "55:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/Project.sol",
        "file": "../Project.sol",
        "id": 517,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 348,
        "src": "89:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/raquibhossain/Desktop/genus/genie-portal/truffle/contracts/token/ERC20/GNIToken.sol",
        "file": "../token/ERC20/GNIToken.sol",
        "id": 518,
        "nodeType": "ImportDirective",
        "scope": 554,
        "sourceUnit": 1098,
        "src": "114:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 519,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 653,
              "src": "183:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$653",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 520,
            "nodeType": "InheritanceSpecifier",
            "src": "183:14:3"
          }
        ],
        "contractDependencies": [
          512,
          653
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 553,
        "linearizedBaseContracts": [
          553,
          653,
          512
        ],
        "name": "GNITokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 523,
            "libraryName": {
              "contractScope": null,
              "id": 521,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2099,
              "src": "208:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2099",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "202:27:3",
            "typeName": {
              "id": 522,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 525,
            "name": "totalValuation",
            "nodeType": "VariableDeclaration",
            "scope": 553,
            "src": "232:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 524,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 551,
              "nodeType": "Block",
              "src": "528:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 547,
                      "name": "totalValuation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 525,
                      "src": "540:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "557:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "540:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 550,
                  "nodeType": "ExpressionStatement",
                  "src": "540:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 552,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 538,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 531,
                    "src": "455:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 539,
                    "name": "_developer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 533,
                    "src": "462:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 540,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 535,
                    "src": "474:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GNIToken_$1097",
                      "typeString": "contract GNIToken"
                    }
                  }
                ],
                "id": 541,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 537,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 512,
                  "src": "445:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$512_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "445:36:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 543,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 527,
                    "src": "503:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 544,
                    "name": "_doomsDay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 529,
                    "src": "517:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 542,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 653,
                  "src": "488:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$653_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "488:39:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "294:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 529,
                  "name": "_doomsDay",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "324:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "351:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "name": "_developer",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "374:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "402:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GNIToken_$1097",
                    "typeString": "contract GNIToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 534,
                    "name": "GNIToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1097,
                    "src": "402:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GNIToken_$1097",
                      "typeString": "contract GNIToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "284:141:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:3"
            },
            "scope": 553,
            "src": "266:297:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 554,
        "src": "153:6629:3"
      }
    ],
    "src": "0:6783:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0xf25186b5081ff5ce73482ad761db0eb0d25abfbf",
      "transactionHash": "0xf5428e7c04081eeeec2cad2bff30509d953d82973b25f5493d55a4d60639cbb0"
    },
    "1539999511537": {
      "events": {},
      "links": {},
      "address": "0xf51ea45a1c0e964d6118e483a64e5314425252dc",
      "transactionHash": "0x762ab23f92ef42106c030f5910055dc786fa70498e120203fb02f2cb8ff00964"
    },
    "1540325448908": {
      "events": {},
      "links": {},
      "address": "0x54c5b311eb450a1b6eabdeca5d61a3aeeb01f8a3",
      "transactionHash": "0xa1cf79df394ded27a639d01602fac695aaee7e3ee7050c96e6b96d69f26875ae"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-24T20:18:44.350Z"
}